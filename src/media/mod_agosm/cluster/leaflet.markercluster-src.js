(function(e,t){typeof exports==='object'&&typeof module!=='undefined'?t(exports):typeof define==='function'&&define.amd?define(['exports'],t):(t((e.Leaflet=e.Leaflet||{},e.Leaflet.markercluster=e.Leaflet.markercluster||{})))}(this,(function(e){'use strict';
var i=L.MarkerClusterGroup=L.FeatureGroup.extend({options:{maxClusterRadius:80,iconCreateFunction:null,clusterPane:L.Marker.prototype.options.pane,spiderfyOnMaxZoom:!0,showCoverageOnHover:!0,zoomToBoundsOnClick:!0,singleMarkerMode:!1,disableClusteringAtZoom:null,removeOutsideVisibleBounds:!0,animate:!0,animateAddingMarkers:!1,spiderfyDistanceMultiplier:1,spiderLegPolylineOptions:{weight:1.5,color:'#222',opacity:0.5},chunkedLoading:!1,chunkInterval:200,chunkDelay:50,chunkProgress:null,polygonOptions:{}},initialize:function(e){L.Util.setOptions(this,e);
if(!this.options.iconCreateFunction){this.options.iconCreateFunction=this._defaultIconCreateFunction};
this._featureGroup=L.featureGroup();
this._featureGroup.addEventParent(this);
this._nonPointGroup=L.featureGroup();
this._nonPointGroup.addEventParent(this);
this._inZoomAnimation=0;
this._needsClustering=[];
this._needsRemoving=[];
this._currentShownBounds=null;
this._queue=[];
this._childMarkerEventHandlers={'dragstart':this._childMarkerDragStart,'move':this._childMarkerMoved,'dragend':this._childMarkerDragEnd,};
var t=L.DomUtil.TRANSITION&&this.options.animate;
L.extend(this,t?this._withAnimation:this._noAnimation);
this._markerCluster=t?L.MarkerCluster:L.MarkerClusterNonAnimated},addLayer:function(e){if(e instanceof L.LayerGroup){return this.addLayers([e])};
if(!e.getLatLng){this._nonPointGroup.addLayer(e);
this.fire('layeradd',{layer:e});
return this};
if(!this._map){this._needsClustering.push(e);
this.fire('layeradd',{layer:e});
return this};
if(this.hasLayer(e)){return this};
if(this._unspiderfy){this._unspiderfy()};
this._addLayer(e,this._maxZoom);
this.fire('layeradd',{layer:e});
this._topClusterLevel._recalculateBounds();
this._refreshClustersIcons();
var t=e,i=this._zoom;
if(e.__parent){while(t.__parent._zoom>=i){t=t.__parent}};
if(this._currentShownBounds.contains(t.getLatLng())){if(this.options.animateAddingMarkers){this._animationAddLayer(e,t)}
else{this._animationAddLayerNonAnimated(e,t)}};
return this},removeLayer:function(e){if(e instanceof L.LayerGroup){return this.removeLayers([e])};
if(!e.getLatLng){this._nonPointGroup.removeLayer(e);
this.fire('layerremove',{layer:e});
return this};
if(!this._map){if(!this._arraySplice(this._needsClustering,e)&&this.hasLayer(e)){this._needsRemoving.push({layer:e,latlng:e._latlng})};
this.fire('layerremove',{layer:e});
return this};
if(!e.__parent){return this};
if(this._unspiderfy){this._unspiderfy();
this._unspiderfyLayer(e)};
this._removeLayer(e,!0);
this.fire('layerremove',{layer:e});
this._topClusterLevel._recalculateBounds();
this._refreshClustersIcons();
e.off(this._childMarkerEventHandlers,this);
if(this._featureGroup.hasLayer(e)){this._featureGroup.removeLayer(e);
if(e.clusterShow){e.clusterShow()}};
return this},addLayers:function(e,t){if(!L.Util.isArray(e)){return this.addLayer(e)};
var d=this._featureGroup,a=this._nonPointGroup,f=this.options.chunkedLoading,c=this.options.chunkInterval,h=this.options.chunkProgress,r=e.length,n=0,s=!0,i;
if(this._map){var u=(new Date()).getTime(),o=L.bind(function(){var g=(new Date()).getTime();
for(;n<r;n++){if(f&&n%200===0){var m=(new Date()).getTime()-g;
if(m>c){break}};
i=e[n];
if(i instanceof L.LayerGroup){if(s){e=e.slice();
s=!1};
this._extractNonGroupLayers(i,e);
r=e.length;
continue};
if(!i.getLatLng){a.addLayer(i);
if(!t){this.fire('layeradd',{layer:i})};
continue};
if(this.hasLayer(i)){continue};
this._addLayer(i,this._maxZoom);
if(!t){this.fire('layeradd',{layer:i})};
if(i.__parent){if(i.__parent.getChildCount()===2){var l=i.__parent.getAllChildMarkers(),p=l[0]===i?l[1]:l[0];
d.removeLayer(p)}}};
if(h){h(n,r,(new Date()).getTime()-u)};
if(n===r){this._topClusterLevel._recalculateBounds();
this._refreshClustersIcons();
this._topClusterLevel._recursivelyAddChildrenToMap(null,this._zoom,this._currentShownBounds)}
else{setTimeout(o,this.options.chunkDelay)}},this);
o()}
else{var l=this._needsClustering;
for(;n<r;n++){i=e[n];
if(i instanceof L.LayerGroup){if(s){e=e.slice();
s=!1};
this._extractNonGroupLayers(i,e);
r=e.length;
continue};
if(!i.getLatLng){a.addLayer(i);
continue};
if(this.hasLayer(i)){continue};
l.push(i)}};
return this},removeLayers:function(e){var i,t,n=e.length,a=this._featureGroup,h=this._nonPointGroup,r=!0;
if(!this._map){for(i=0;i<n;i++){t=e[i];
if(t instanceof L.LayerGroup){if(r){e=e.slice();
r=!1};
this._extractNonGroupLayers(t,e);
n=e.length;
continue};
this._arraySplice(this._needsClustering,t);
h.removeLayer(t);
if(this.hasLayer(t)){this._needsRemoving.push({layer:t,latlng:t._latlng})};
this.fire('layerremove',{layer:t})};
return this};
if(this._unspiderfy){this._unspiderfy();
var s=e.slice(),o=n;
for(i=0;i<o;i++){t=s[i];
if(t instanceof L.LayerGroup){this._extractNonGroupLayers(t,s);
o=s.length;
continue};
this._unspiderfyLayer(t)}};
for(i=0;i<n;i++){t=e[i];
if(t instanceof L.LayerGroup){if(r){e=e.slice();
r=!1};
this._extractNonGroupLayers(t,e);
n=e.length;
continue};
if(!t.__parent){h.removeLayer(t);
this.fire('layerremove',{layer:t});
continue};
this._removeLayer(t,!0,!0);
this.fire('layerremove',{layer:t});
if(a.hasLayer(t)){a.removeLayer(t);
if(t.clusterShow){t.clusterShow()}}};
this._topClusterLevel._recalculateBounds();
this._refreshClustersIcons();
this._topClusterLevel._recursivelyAddChildrenToMap(null,this._zoom,this._currentShownBounds);
return this},clearLayers:function(){if(!this._map){this._needsClustering=[];
this._needsRemoving=[];
delete this._gridClusters;
delete this._gridUnclustered};
if(this._noanimationUnspiderfy){this._noanimationUnspiderfy()};
this._featureGroup.clearLayers();
this._nonPointGroup.clearLayers();
this.eachLayer(function(e){e.off(this._childMarkerEventHandlers,this);
delete e.__parent},this);
if(this._map){this._generateInitialClusters()};
return this},getBounds:function(){var e=new L.LatLngBounds();
if(this._topClusterLevel){e.extend(this._topClusterLevel._bounds)};
for(var t=this._needsClustering.length-1;t>=0;t--){e.extend(this._needsClustering[t].getLatLng())};
e.extend(this._nonPointGroup.getBounds());
return e},eachLayer:function(e,t){var n=this._needsClustering.slice(),o=this._needsRemoving,s,i,r;
if(this._topClusterLevel){this._topClusterLevel.getAllChildMarkers(n)};
for(i=n.length-1;i>=0;i--){s=!0;
for(r=o.length-1;r>=0;r--){if(o[r].layer===n[i]){s=!1;
break}};
if(s){e.call(t,n[i])}};
this._nonPointGroup.eachLayer(e,t)},getLayers:function(){var e=[];
this.eachLayer(function(t){e.push(t)});
return e},getLayer:function(e){var t=null;
e=parseInt(e,10);
this.eachLayer(function(i){if(L.stamp(i)===e){t=i}});
return t},hasLayer:function(e){if(!e){return!1};
var t,i=this._needsClustering;
for(t=i.length-1;t>=0;t--){if(i[t]===e){return!0}};
i=this._needsRemoving;
for(t=i.length-1;t>=0;t--){if(i[t].layer===e){return!1}};
return!!(e.__parent&&e.__parent._group===this)||this._nonPointGroup.hasLayer(e)},zoomToShowLayer:function(e,t){if(typeof t!=='function'){t=function(){}};
var i=function(){if((e._icon||e.__parent._icon)&&!this._inZoomAnimation){this._map.off('moveend',i,this);
this.off('animationend',i,this);
if(e._icon){t()}
else if(e.__parent._icon){this.once('spiderfied',t,this);
e.__parent.spiderfy()}}};
if(e._icon&&this._map.getBounds().contains(e.getLatLng())){t()}
else if(e.__parent._zoom<Math.round(this._map._zoom)){this._map.on('moveend',i,this);
this._map.panTo(e.getLatLng())}
else{this._map.on('moveend',i,this);
this.on('animationend',i,this);
e.__parent.zoomToBounds()}},onAdd:function(e){this._map=e;
var i,n,t;
if(!isFinite(this._map.getMaxZoom())){throw'Map has no maxZoom specified'};
this._featureGroup.addTo(e);
this._nonPointGroup.addTo(e);
if(!this._gridClusters){this._generateInitialClusters()};
this._maxLat=e.options.crs.projection.MAX_LATITUDE;
for(i=0,n=this._needsRemoving.length;i<n;i++){t=this._needsRemoving[i];
t.newlatlng=t.layer._latlng;
t.layer._latlng=t.latlng};
for(i=0,n=this._needsRemoving.length;i<n;i++){t=this._needsRemoving[i];
this._removeLayer(t.layer,!0);
t.layer._latlng=t.newlatlng};
this._needsRemoving=[];
this._zoom=Math.round(this._map._zoom);
this._currentShownBounds=this._getExpandedVisibleBounds();
this._map.on('zoomend',this._zoomEnd,this);
this._map.on('moveend',this._moveEnd,this);
if(this._spiderfierOnAdd){this._spiderfierOnAdd()};
this._bindEvents();
n=this._needsClustering;
this._needsClustering=[];
this.addLayers(n,!0)},onRemove:function(e){e.off('zoomend',this._zoomEnd,this);
e.off('moveend',this._moveEnd,this);
this._unbindEvents();
this._map._mapPane.className=this._map._mapPane.className.replace(' leaflet-cluster-anim','');
if(this._spiderfierOnRemove){this._spiderfierOnRemove()};
delete this._maxLat;
this._hideCoverage();
this._featureGroup.remove();
this._nonPointGroup.remove();
this._featureGroup.clearLayers();
this._map=null},getVisibleParent:function(e){var t=e;
while(t&&!t._icon){t=t.__parent};
return t||null},_arraySplice:function(e,t){for(var i=e.length-1;i>=0;i--){if(e[i]===t){e.splice(i,1);
return!0}}},_removeFromGridUnclustered:function(e,t){var i=this._map,n=this._gridUnclustered,r=Math.floor(this._map.getMinZoom());
for(;t>=r;t--){if(!n[t].removeObject(e,i.project(e.getLatLng(),t))){break}}},_childMarkerDragStart:function(e){e.target.__dragStart=e.target._latlng},_childMarkerMoved:function(e){if(!this._ignoreMove&&!e.target.__dragStart){var t=e.target._popup&&e.target._popup.isOpen();
this._moveChild(e.target,e.oldLatLng,e.latlng);
if(t){e.target.openPopup()}}},_moveChild:function(e,t,i){e._latlng=t;
this.removeLayer(e);
e._latlng=i;
this.addLayer(e)},_childMarkerDragEnd:function(e){var t=e.target.__dragStart;
delete e.target.__dragStart;
if(t){this._moveChild(e.target,t,e.target._latlng)}},_removeLayer:function(e,t,n){var h=this._gridClusters,l=this._gridUnclustered,s=this._featureGroup,o=this._map,u=Math.floor(this._map.getMinZoom());
if(t){this._removeFromGridUnclustered(e,this._maxZoom)};
var i=e.__parent,a=i._markers,r;
this._arraySplice(a,e);
while(i){i._childCount--;
i._boundsNeedUpdate=!0;
if(i._zoom<u){break}
else if(t&&i._childCount<=1){r=i._markers[0]===e?i._markers[1]:i._markers[0];
h[i._zoom].removeObject(i,o.project(i._cLatLng,i._zoom));
l[i._zoom].addObject(r,o.project(r.getLatLng(),i._zoom));
this._arraySplice(i.__parent._childClusters,i);
i.__parent._markers.push(r);
r.__parent=i.__parent;
if(i._icon){s.removeLayer(i);
if(!n){s.addLayer(r)}}}
else{i._iconNeedsUpdate=!0};
i=i.__parent};
delete e.__parent},_isOrIsParent:function(e,t){while(t){if(e===t){return!0};
t=t.parentNode};
return!1},fire:function(e,t,i){if(t&&t.layer instanceof L.MarkerCluster){if(t.originalEvent&&this._isOrIsParent(t.layer._icon,t.originalEvent.relatedTarget)){return};
e='cluster'+e};
L.FeatureGroup.prototype.fire.call(this,e,t,i)},listens:function(e,t){return L.FeatureGroup.prototype.listens.call(this,e,t)||L.FeatureGroup.prototype.listens.call(this,'cluster'+e,t)},_defaultIconCreateFunction:function(e){var i=e.getChildCount(),t=' marker-cluster-';
if(i<10){t+='small'}
else if(i<100){t+='medium'}
else{t+='large'};
return new L.DivIcon({html:'<div><span>'+i+'</span></div>',className:'marker-cluster'+t,iconSize:new L.Point(40,40)})},_bindEvents:function(){var e=this._map,t=this.options.spiderfyOnMaxZoom,i=this.options.showCoverageOnHover,n=this.options.zoomToBoundsOnClick;
if(t||n){this.on('clusterclick',this._zoomOrSpiderfy,this)};
if(i){this.on('clustermouseover',this._showCoverage,this);
this.on('clustermouseout',this._hideCoverage,this);
e.on('zoomend',this._hideCoverage,this)}},_zoomOrSpiderfy:function(e){var i=e.layer,t=i;
while(t._childClusters.length===1){t=t._childClusters[0]};
if(t._zoom===this._maxZoom&&t._childCount===i._childCount&&this.options.spiderfyOnMaxZoom){i.spiderfy()}
else if(this.options.zoomToBoundsOnClick){i.zoomToBounds()};
if(e.originalEvent&&e.originalEvent.keyCode===13){this._map._container.focus()}},_showCoverage:function(e){var t=this._map;
if(this._inZoomAnimation){return};
if(this._shownPolygon){t.removeLayer(this._shownPolygon)};
if(e.layer.getChildCount()>2&&e.layer!==this._spiderfied){this._shownPolygon=new L.Polygon(e.layer.getConvexHull(),this.options.polygonOptions);
t.addLayer(this._shownPolygon)}},_hideCoverage:function(){if(this._shownPolygon){this._map.removeLayer(this._shownPolygon);
this._shownPolygon=null}},_unbindEvents:function(){var e=this.options.spiderfyOnMaxZoom,t=this.options.showCoverageOnHover,i=this.options.zoomToBoundsOnClick,n=this._map;
if(e||i){this.off('clusterclick',this._zoomOrSpiderfy,this)};
if(t){this.off('clustermouseover',this._showCoverage,this);
this.off('clustermouseout',this._hideCoverage,this);
n.off('zoomend',this._hideCoverage,this)}},_zoomEnd:function(){if(!this._map){return};
this._mergeSplitClusters();
this._zoom=Math.round(this._map._zoom);
this._currentShownBounds=this._getExpandedVisibleBounds()},_moveEnd:function(){if(this._inZoomAnimation){return};
var e=this._getExpandedVisibleBounds();
this._topClusterLevel._recursivelyRemoveChildrenFromMap(this._currentShownBounds,Math.floor(this._map.getMinZoom()),this._zoom,e);
this._topClusterLevel._recursivelyAddChildrenToMap(null,Math.round(this._map._zoom),e);
this._currentShownBounds=e;
return},_generateInitialClusters:function(){var t=Math.ceil(this._map.getMaxZoom()),r=Math.floor(this._map.getMinZoom()),i=this.options.maxClusterRadius,n=i;
if(typeof i!=='function'){n=function(){return i}};
if(this.options.disableClusteringAtZoom!==null){t=this.options.disableClusteringAtZoom-1};
this._maxZoom=t;
this._gridClusters={};
this._gridUnclustered={};
for(var e=t;e>=r;e--){this._gridClusters[e]=new L.DistanceGrid(n(e));
this._gridUnclustered[e]=new L.DistanceGrid(n(e))};
this._topClusterLevel=new this._markerCluster(this,r-1)},_addLayer:function(e,t){var h=this._gridClusters,l=this._gridUnclustered,u=Math.floor(this._map.getMinZoom()),o,n;
if(this.options.singleMarkerMode){this._overrideMarkerIcon(e)};
e.on(this._childMarkerEventHandlers,this);
for(;t>=u;t--){o=this._map.project(e.getLatLng(),t);
var i=h[t].getNearObject(o);
if(i){i._addChild(e);
e.__parent=i;
return};
i=l[t].getNearObject(o);
if(i){var a=i.__parent;
if(a){this._removeLayer(i,!1)};
var r=new this._markerCluster(this,t,i,e);
h[t].addObject(r,this._map.project(r._cLatLng,t));
i.__parent=r;
e.__parent=r;
var s=r;
for(n=t-1;n>a._zoom;n--){s=new this._markerCluster(this,n,s);
h[n].addObject(s,this._map.project(i.getLatLng(),n))};
a._addChild(s);
this._removeFromGridUnclustered(i,t);
return};
l[t].addObject(e,o)};
this._topClusterLevel._addChild(e);
e.__parent=this._topClusterLevel;
return},_refreshClustersIcons:function(){this._featureGroup.eachLayer(function(e){if(e instanceof L.MarkerCluster&&e._iconNeedsUpdate){e._updateIcon()}})},_enqueue:function(e){this._queue.push(e);
if(!this._queueTimeout){this._queueTimeout=setTimeout(L.bind(this._processQueue,this),300)}},_processQueue:function(){for(var e=0;e<this._queue.length;e++){this._queue[e].call(this)};
this._queue.length=0;
clearTimeout(this._queueTimeout);
this._queueTimeout=null},_mergeSplitClusters:function(){var e=Math.round(this._map._zoom);
this._processQueue();
if(this._zoom<e&&this._currentShownBounds.intersects(this._getExpandedVisibleBounds())){this._animationStart();
this._topClusterLevel._recursivelyRemoveChildrenFromMap(this._currentShownBounds,Math.floor(this._map.getMinZoom()),this._zoom,this._getExpandedVisibleBounds());
this._animationZoomIn(this._zoom,e)}
else if(this._zoom>e){this._animationStart();
this._animationZoomOut(this._zoom,e)}
else{this._moveEnd()}},_getExpandedVisibleBounds:function(){if(!this.options.removeOutsideVisibleBounds){return this._mapBoundsInfinite}
else if(L.Browser.mobile){return this._checkBoundsMaxLat(this._map.getBounds())};
return this._checkBoundsMaxLat(this._map.getBounds().pad(1))},_checkBoundsMaxLat:function(e){var t=this._maxLat;
if(t!==undefined){if(e.getNorth()>=t){e._northEast.lat=Infinity};
if(e.getSouth()<=-t){e._southWest.lat=-Infinity}};
return e},_animationAddLayerNonAnimated:function(e,t){if(t===e){this._featureGroup.addLayer(e)}
else if(t._childCount===2){t._addToMap();
var i=t.getAllChildMarkers();
this._featureGroup.removeLayer(i[0]);
this._featureGroup.removeLayer(i[1])}
else{t._updateIcon()}},_extractNonGroupLayers:function(e,t){var r=e.getLayers(),n=0,i;
t=t||[];
for(;n<r.length;n++){i=r[n];
if(i instanceof L.LayerGroup){this._extractNonGroupLayers(i,t);
continue};
t.push(i)};
return t},_overrideMarkerIcon:function(e){var t=e.options.icon=this.options.iconCreateFunction({getChildCount:function(){return 1},getAllChildMarkers:function(){return[e]}});
return t}});
L.MarkerClusterGroup.include({_mapBoundsInfinite:new L.LatLngBounds(new L.LatLng(-Infinity,-Infinity),new L.LatLng(Infinity,Infinity))});
L.MarkerClusterGroup.include({_noAnimation:{_animationStart:function(){},_animationZoomIn:function(e,t){this._topClusterLevel._recursivelyRemoveChildrenFromMap(this._currentShownBounds,Math.floor(this._map.getMinZoom()),e);
this._topClusterLevel._recursivelyAddChildrenToMap(null,t,this._getExpandedVisibleBounds());
this.fire('animationend')},_animationZoomOut:function(e,t){this._topClusterLevel._recursivelyRemoveChildrenFromMap(this._currentShownBounds,Math.floor(this._map.getMinZoom()),e);
this._topClusterLevel._recursivelyAddChildrenToMap(null,t,this._getExpandedVisibleBounds());
this.fire('animationend')},_animationAddLayer:function(e,t){this._animationAddLayerNonAnimated(e,t)}},_withAnimation:{_animationStart:function(){this._map._mapPane.className+=' leaflet-cluster-anim';
this._inZoomAnimation++},_animationZoomIn:function(e,t){var i=this._getExpandedVisibleBounds(),n=this._featureGroup,s=Math.floor(this._map.getMinZoom()),r;
this._ignoreMove=!0;
this._topClusterLevel._recursively(i,e,s,function(s){var o=s._latlng,h=s._markers,a;
if(!i.contains(o)){o=null};
if(s._isSingleParent()&&e+1===t){n.removeLayer(s);
s._recursivelyAddChildrenToMap(null,t,i)}
else{s.clusterHide();
s._recursivelyAddChildrenToMap(o,t,i)};
for(r=h.length-1;r>=0;r--){a=h[r];
if(!i.contains(a._latlng)){n.removeLayer(a)}}});
this._forceLayout();
this._topClusterLevel._recursivelyBecomeVisible(i,t);
n.eachLayer(function(e){if(!(e instanceof L.MarkerCluster)&&e._icon){e.clusterShow()}});
this._topClusterLevel._recursively(i,e,t,function(e){e._recursivelyRestoreChildPositions(t)});
this._ignoreMove=!1;
this._enqueue(function(){this._topClusterLevel._recursively(i,e,s,function(e){n.removeLayer(e);
e.clusterShow()});
this._animationEnd()})},_animationZoomOut:function(e,t){this._animationZoomOutSingle(this._topClusterLevel,e-1,t);
this._topClusterLevel._recursivelyAddChildrenToMap(null,t,this._getExpandedVisibleBounds());
this._topClusterLevel._recursivelyRemoveChildrenFromMap(this._currentShownBounds,Math.floor(this._map.getMinZoom()),e,this._getExpandedVisibleBounds())},_animationAddLayer:function(e,t){var i=this,n=this._featureGroup;
n.addLayer(e);
if(t!==e){if(t._childCount>2){t._updateIcon();
this._forceLayout();
this._animationStart();
e._setPos(this._map.latLngToLayerPoint(t.getLatLng()));
e.clusterHide();
this._enqueue(function(){n.removeLayer(e);
e.clusterShow();
i._animationEnd()})}
else{this._forceLayout();
i._animationStart();
i._animationZoomOutSingle(t,this._map.getMaxZoom(),this._zoom)}}}},_animationZoomOutSingle:function(e,t,i){var n=this._getExpandedVisibleBounds(),r=Math.floor(this._map.getMinZoom());
e._recursivelyAnimateChildrenInAndAddSelfToMap(n,r,t+1,i);
var s=this;
this._forceLayout();
e._recursivelyBecomeVisible(n,i);
this._enqueue(function(){if(e._childCount===1){var o=e._markers[0];
this._ignoreMove=!0;
o.setLatLng(o.getLatLng());
this._ignoreMove=!1;
if(o.clusterShow){o.clusterShow()}}
else{e._recursively(n,i,r,function(e){e._recursivelyRemoveChildrenFromMap(n,r,t+1)})};
s._animationEnd()})},_animationEnd:function(){if(this._map){this._map._mapPane.className=this._map._mapPane.className.replace(' leaflet-cluster-anim','')};
this._inZoomAnimation--;
this.fire('animationend')},_forceLayout:function(){L.Util.falseFn(document.body.offsetWidth)}});
L.markerClusterGroup=function(e){return new L.MarkerClusterGroup(e)};
var t=L.MarkerCluster=L.Marker.extend({options:L.Icon.prototype.options,initialize:function(e,t,i,n){L.Marker.prototype.initialize.call(this,i?(i._cLatLng||i.getLatLng()):new L.LatLng(0,0),{icon:this,pane:e.options.clusterPane});
this._group=e;
this._zoom=t;
this._markers=[];
this._childClusters=[];
this._childCount=0;
this._iconNeedsUpdate=!0;
this._boundsNeedUpdate=!0;
this._bounds=new L.LatLngBounds();
if(i){this._addChild(i)};
if(n){this._addChild(n)}},getAllChildMarkers:function(e,t){e=e||[];
for(var n=this._childClusters.length-1;n>=0;n--){this._childClusters[n].getAllChildMarkers(e)};
for(var i=this._markers.length-1;i>=0;i--){if(t&&this._markers[i].__dragStart){continue};
e.push(this._markers[i])};
return e},getChildCount:function(){return this._childCount},zoomToBounds:function(e){var t=this._childClusters.slice(),o=this._group._map,s=o.getBoundsZoom(this._bounds),i=this._zoom+1,a=o.getZoom(),n;
while(t.length>0&&s>i){i++;
var r=[];
for(n=0;n<t.length;n++){r=r.concat(t[n]._childClusters)};
t=r};
if(s>i){this._group._map.setView(this._latlng,i)}
else if(s<=a){this._group._map.setView(this._latlng,a+1)}
else{this._group._map.fitBounds(this._bounds,e)}},getBounds:function(){var e=new L.LatLngBounds();
e.extend(this._bounds);
return e},_updateIcon:function(){this._iconNeedsUpdate=!0;
if(this._icon){this.setIcon(this)}},createIcon:function(){if(this._iconNeedsUpdate){this._iconObj=this._group.options.iconCreateFunction(this);
this._iconNeedsUpdate=!1};
return this._iconObj.createIcon()},createShadow:function(){return this._iconObj.createShadow()},_addChild:function(e,t){this._iconNeedsUpdate=!0;
this._boundsNeedUpdate=!0;
this._setClusterCenter(e);
if(e instanceof L.MarkerCluster){if(!t){this._childClusters.push(e);
e.__parent=this};
this._childCount+=e._childCount}
else{if(!t){this._markers.push(e)};
this._childCount++};
if(this.__parent){this.__parent._addChild(e,!0)}},_setClusterCenter:function(e){if(!this._cLatLng){this._cLatLng=e._cLatLng||e._latlng}},_resetBounds:function(){var e=this._bounds;
if(e._southWest){e._southWest.lat=Infinity;
e._southWest.lng=Infinity};
if(e._northEast){e._northEast.lat=-Infinity;
e._northEast.lng=-Infinity}},_recalculateBounds:function(){var a=this._markers,h=this._childClusters,n=0,r=0,s=this._childCount,e,i,t,o;
if(s===0){return};
this._resetBounds();
for(e=0;e<a.length;e++){t=a[e]._latlng;
this._bounds.extend(t);
n+=t.lat;
r+=t.lng};
for(e=0;e<h.length;e++){i=h[e];
if(i._boundsNeedUpdate){i._recalculateBounds()};
this._bounds.extend(i._bounds);
t=i._wLatLng;
o=i._childCount;
n+=t.lat*o;
r+=t.lng*o};
this._latlng=this._wLatLng=new L.LatLng(n/s,r/s);
this._boundsNeedUpdate=!1},_addToMap:function(e){if(e){this._backupLatlng=this._latlng;
this.setLatLng(e)};
this._group._featureGroup.addLayer(this)},_recursivelyAnimateChildrenIn:function(e,t,i){this._recursively(e,this._group._map.getMinZoom(),i-1,function(e){var r=e._markers,i,n;
for(i=r.length-1;i>=0;i--){n=r[i];
if(n._icon){n._setPos(t);
n.clusterHide()}}},function(e){var r=e._childClusters,i,n;
for(i=r.length-1;i>=0;i--){n=r[i];
if(n._icon){n._setPos(t);
n.clusterHide()}}})},_recursivelyAnimateChildrenInAndAddSelfToMap:function(e,t,i,n){this._recursively(e,n,t,function(r){r._recursivelyAnimateChildrenIn(e,r._group._map.latLngToLayerPoint(r.getLatLng()).round(),i);
if(r._isSingleParent()&&i-1===n){r.clusterShow();
r._recursivelyRemoveChildrenFromMap(e,t,i)}
else{r.clusterHide()};
r._addToMap()})},_recursivelyBecomeVisible:function(e,t){this._recursively(e,this._group._map.getMinZoom(),t,null,function(e){e.clusterShow()})},_recursivelyAddChildrenToMap:function(e,t,i){this._recursively(i,this._group._map.getMinZoom()-1,t,function(n){if(t===n._zoom){return};
for(var s=n._markers.length-1;s>=0;s--){var r=n._markers[s];
if(!i.contains(r._latlng)){continue};
if(e){r._backupLatlng=r.getLatLng();
r.setLatLng(e);
if(r.clusterHide){r.clusterHide()}};
n._group._featureGroup.addLayer(r)}},function(t){t._addToMap(e)})},_recursivelyRestoreChildPositions:function(e){for(var r=this._markers.length-1;r>=0;r--){var t=this._markers[r];
if(t._backupLatlng){t.setLatLng(t._backupLatlng);
delete t._backupLatlng}};
if(e-1===this._zoom){for(var n=this._childClusters.length-1;n>=0;n--){this._childClusters[n]._restorePosition()}}
else{for(var i=this._childClusters.length-1;i>=0;i--){this._childClusters[i]._recursivelyRestoreChildPositions(e)}}},_restorePosition:function(){if(this._backupLatlng){this.setLatLng(this._backupLatlng);
delete this._backupLatlng}},_recursivelyRemoveChildrenFromMap:function(e,t,i,s){var n,r;
this._recursively(e,t-1,i-1,function(e){for(r=e._markers.length-1;r>=0;r--){n=e._markers[r];
if(!s||!s.contains(n._latlng)){e._group._featureGroup.removeLayer(n);
if(n.clusterShow){n.clusterShow()}}}},function(e){for(r=e._childClusters.length-1;r>=0;r--){n=e._childClusters[r];
if(!s||!s.contains(n._latlng)){e._group._featureGroup.removeLayer(n);
if(n.clusterShow){n.clusterShow()}}}})},_recursively:function(e,t,i,n,a){var h=this._childClusters,s=this._zoom,o,r;
if(t<=s){if(n){n(this)};
if(a&&s===i){a(this)}};
if(s<t||s<i){for(o=h.length-1;o>=0;o--){r=h[o];
if(r._boundsNeedUpdate){r._recalculateBounds()};
if(e.intersects(r._bounds)){r._recursively(e,t,i,n,a)}}}},_isSingleParent:function(){return this._childClusters.length>0&&this._childClusters[0]._childCount===this._childCount}});
L.Marker.include({clusterHide:function(){var e=this.options.opacity;
this.setOpacity(0);
this.options.opacity=e;
return this},clusterShow:function(){return this.setOpacity(this.options.opacity)}});
L.DistanceGrid=function(e){this._cellSize=e;
this._sqCellSize=e*e;
this._grid={};
this._objectPoint={}};
L.DistanceGrid.prototype={addObject:function(e,t){var i=this._getCoord(t.x),n=this._getCoord(t.y),r=this._grid,s=r[n]=r[n]||{},o=s[i]=s[i]||[],a=L.Util.stamp(e);
this._objectPoint[a]=t;
o.push(e)},updateObject:function(e,t){this.removeObject(e);
this.addObject(e,t)},removeObject:function(e,t){var n=this._getCoord(t.x),a=this._getCoord(t.y),h=this._grid,r=h[a]=h[a]||{},s=r[n]=r[n]||[],i,o;
delete this._objectPoint[L.Util.stamp(e)];
for(i=0,o=s.length;i<o;i++){if(s[i]===e){s.splice(i,1);
if(o===1){delete r[n]};
return!0}}},eachObject:function(e,t){var o,a,i,n,r,s,h,l=this._grid;
for(o in l){r=l[o];
for(a in r){s=r[a];
for(i=0,n=s.length;i<n;i++){h=e.call(t,s[i]);
if(h){i--;
n--}}}}},getNearObject:function(e){var u=this._getCoord(e.x),d=this._getCoord(e.y),t,i,n,o,r,f,a,s,c=this._objectPoint,h=this._sqCellSize,l=null;
for(t=d-1;t<=d+1;t++){o=this._grid[t];
if(o){for(i=u-1;i<=u+1;i++){r=o[i];
if(r){for(n=0,f=r.length;n<f;n++){a=r[n];
s=this._sqDist(c[L.Util.stamp(a)],e);
if(s<h||s<=h&&l===null){h=s;
l=a}}}}}};
return l},_getCoord:function(e){var t=Math.floor(e/this._cellSize);
return isFinite(t)?t:e},_sqDist:function(e,t){var i=t.x-e.x,n=t.y-e.y;
return i*i+n*n}};(function(){L.QuickHull={getDistant:function(e,t){var i=t[1].lat-t[0].lat,n=t[0].lng-t[1].lng;
return(n*(e.lat-t[0].lat)+i*(e.lng-t[0].lng))},findMostDistantPointFromBaseLine:function(e,t){var s=0,o=null,a=[],i,n,r;
for(i=t.length-1;i>=0;i--){n=t[i];
r=this.getDistant(n,e);
if(r>0){a.push(n)}
else{continue};
if(r>s){s=r;
o=n}};
return{maxPoint:o,newPoints:a}},buildConvexHull:function(e,t){var i=[],n=this.findMostDistantPointFromBaseLine(e,t);
if(n.maxPoint){i=i.concat(this.buildConvexHull([e[0],n.maxPoint],n.newPoints));
i=i.concat(this.buildConvexHull([n.maxPoint,e[1]],n.newPoints));
return i}
else{return[e[0]]}},getConvexHull:function(e){var i=!1,n=!1,a=!1,h=!1,l=null,u=null,d=null,f=null,r=null,s=null,o;
for(o=e.length-1;o>=0;o--){var t=e[o];
if(i===!1||t.lat>i){l=t;
i=t.lat};
if(n===!1||t.lat<n){u=t;
n=t.lat};
if(a===!1||t.lng>a){d=t;
a=t.lng};
if(h===!1||t.lng<h){f=t;
h=t.lng}};
if(n!==i){s=u;
r=l}
else{s=f;
r=d};
var c=[].concat(this.buildConvexHull([s,r],e),this.buildConvexHull([r,s],e));
return c}}}());
L.MarkerCluster.include({getConvexHull:function(){var t=this.getAllChildMarkers(),i=[],n,e;
for(e=t.length-1;e>=0;e--){n=t[e].getLatLng();
i.push(n)};
return L.QuickHull.getConvexHull(i)}});
L.MarkerCluster.include({_2PI:Math.PI*2,_circleFootSeparation:25,_circleStartAngle:0,_spiralFootSeparation:28,_spiralLengthStart:11,_spiralLengthFactor:5,_circleSpiralSwitchover:9,spiderfy:function(){if(this._group._spiderfied===this||this._group._inZoomAnimation){return};
var e=this.getAllChildMarkers(null,!0),n=this._group,r=n._map,t=r.latLngToLayerPoint(this._latlng),i;
this._group._unspiderfy();
this._group._spiderfied=this;
if(e.length>=this._circleSpiralSwitchover){i=this._generatePointsSpiral(e.length,t)}
else{t.y+=10;
i=this._generatePointsCircle(e.length,t)};
this._animationSpiderfy(e,i)},unspiderfy:function(e){if(this._group._inZoomAnimation){return};
this._animationUnspiderfy(e);
this._group._spiderfied=null},_generatePointsCircle:function(e,t){var o=this._group.options.spiderfyDistanceMultiplier*this._circleFootSeparation*(2+e),n=o/this._2PI,a=this._2PI/e,r=[],i,s;
n=Math.max(n,35);
r.length=e;
for(i=0;i<e;i++){s=this._circleStartAngle+i*a;
r[i]=new L.Point(t.x+n*Math.cos(s),t.y+n*Math.sin(s))._round()};
return r},_generatePointsSpiral:function(e,t){var s=this._group.options.spiderfyDistanceMultiplier,n=s*this._spiralLengthStart,a=s*this._spiralFootSeparation,h=s*this._spiralLengthFactor*this._2PI,r=0,o=[],i;
o.length=e;
for(i=e;i>=0;i--){if(i<e){o[i]=new L.Point(t.x+n*Math.cos(r),t.y+n*Math.sin(r))._round()};
r+=a/n+i*0.0005;
n+=h/r};
return o},_noanimationUnspiderfy:function(){var t=this._group,r=t._map,s=t._featureGroup,n=this.getAllChildMarkers(null,!0),e,i;
t._ignoreMove=!0;
this.setOpacity(1);
for(i=n.length-1;i>=0;i--){e=n[i];
s.removeLayer(e);
if(e._preSpiderfyLatlng){e.setLatLng(e._preSpiderfyLatlng);
delete e._preSpiderfyLatlng};
if(e.setZIndexOffset){e.setZIndexOffset(0)};
if(e._spiderLeg){r.removeLayer(e._spiderLeg);
delete e._spiderLeg}};
t.fire('unspiderfied',{cluster:this,markers:n});
t._ignoreMove=!1;
t._spiderfied=null}});
L.MarkerClusterNonAnimated=L.MarkerCluster.extend({_animationSpiderfy:function(e,t){var n=this._group,a=n._map,h=n._featureGroup,l=this._group.options.spiderLegPolylineOptions,r,i,s,o;
n._ignoreMove=!0;
for(r=0;r<e.length;r++){o=a.layerPointToLatLng(t[r]);
i=e[r];
s=new L.Polyline([this._latlng,o],l);
a.addLayer(s);
i._spiderLeg=s;
i._preSpiderfyLatlng=i._latlng;
i.setLatLng(o);
if(i.setZIndexOffset){i.setZIndexOffset(1000000)};
h.addLayer(i)};
this.setOpacity(0.3);
n._ignoreMove=!1;
n.fire('spiderfied',{cluster:this,markers:e})},_animationUnspiderfy:function(){this._noanimationUnspiderfy()}});
L.MarkerCluster.include({_animationSpiderfy:function(e,t){var g=this,r=this._group,u=r._map,m=r._featureGroup,c=this._latlng,p=u.latLngToLayerPoint(c),f=L.Path.SVG,o=L.extend({},this._group.options.spiderLegPolylineOptions),h=o.opacity,n,i,s,a,d,l;
if(h===undefined){h=L.MarkerClusterGroup.prototype.options.spiderLegPolylineOptions.opacity};
if(f){o.opacity=0;
o.className=(o.className||'')+' leaflet-cluster-spider-leg'}
else{o.opacity=h};
r._ignoreMove=!0;
for(n=0;n<e.length;n++){i=e[n];
l=u.layerPointToLatLng(t[n]);
s=new L.Polyline([c,l],o);
u.addLayer(s);
i._spiderLeg=s;
if(f){a=s._path;
d=a.getTotalLength()+0.1;
a.style.strokeDasharray=d;
a.style.strokeDashoffset=d};
if(i.setZIndexOffset){i.setZIndexOffset(1000000)};
if(i.clusterHide){i.clusterHide()};
m.addLayer(i);
if(i._setPos){i._setPos(p)}};
r._forceLayout();
r._animationStart();
for(n=e.length-1;n>=0;n--){l=u.layerPointToLatLng(t[n]);
i=e[n];
i._preSpiderfyLatlng=i._latlng;
i.setLatLng(l);
if(i.clusterShow){i.clusterShow()};
if(f){s=i._spiderLeg;
a=s._path;
a.style.strokeDashoffset=0;
s.setStyle({opacity:h})}};
this.setOpacity(0.3);
r._ignoreMove=!1;
setTimeout(function(){r._animationEnd();
r.fire('spiderfied',{cluster:g,markers:e})},200)},_animationUnspiderfy:function(e){var d=this,n=this._group,o=n._map,l=n._featureGroup,f=e?o._latLngToNewLayerPoint(this._latlng,e.zoom,e.center):o.latLngToLayerPoint(this._latlng),r=this.getAllChildMarkers(null,!0),c=L.Path.SVG,t,i,a,h,u,s;
n._ignoreMove=!0;
n._animationStart();
this.setOpacity(1);
for(i=r.length-1;i>=0;i--){t=r[i];
if(!t._preSpiderfyLatlng){continue};
t.closePopup();
t.setLatLng(t._preSpiderfyLatlng);
delete t._preSpiderfyLatlng;
s=!0;
if(t._setPos){t._setPos(f);
s=!1};
if(t.clusterHide){t.clusterHide();
s=!1};
if(s){l.removeLayer(t)};
if(c){a=t._spiderLeg;
h=a._path;
u=h.getTotalLength()+0.1;
h.style.strokeDashoffset=u;
a.setStyle({opacity:0})}};
n._ignoreMove=!1;
setTimeout(function(){var e=0;
for(i=r.length-1;i>=0;i--){t=r[i];
if(t._spiderLeg){e++}};
for(i=r.length-1;i>=0;i--){t=r[i];
if(!t._spiderLeg){continue};
if(t.clusterShow){t.clusterShow()};
if(t.setZIndexOffset){t.setZIndexOffset(0)};
if(e>1){l.removeLayer(t)};
o.removeLayer(t._spiderLeg);
delete t._spiderLeg};
n._animationEnd();
n.fire('unspiderfied',{cluster:d,markers:r})},200)}});
L.MarkerClusterGroup.include({_spiderfied:null,unspiderfy:function(){this._unspiderfy.apply(this,arguments)},_spiderfierOnAdd:function(){this._map.on('click',this._unspiderfyWrapper,this);
if(this._map.options.zoomAnimation){this._map.on('zoomstart',this._unspiderfyZoomStart,this)};
this._map.on('zoomend',this._noanimationUnspiderfy,this);
if(!L.Browser.touch){this._map.getRenderer(this)}},_spiderfierOnRemove:function(){this._map.off('click',this._unspiderfyWrapper,this);
this._map.off('zoomstart',this._unspiderfyZoomStart,this);
this._map.off('zoomanim',this._unspiderfyZoomAnim,this);
this._map.off('zoomend',this._noanimationUnspiderfy,this);
this._noanimationUnspiderfy()},_unspiderfyZoomStart:function(){if(!this._map){return};
this._map.on('zoomanim',this._unspiderfyZoomAnim,this)},_unspiderfyZoomAnim:function(e){if(L.DomUtil.hasClass(this._map._mapPane,'leaflet-touching')){return};
this._map.off('zoomanim',this._unspiderfyZoomAnim,this);
this._unspiderfy(e)},_unspiderfyWrapper:function(){this._unspiderfy()},_unspiderfy:function(e){if(this._spiderfied){this._spiderfied.unspiderfy(e)}},_noanimationUnspiderfy:function(){if(this._spiderfied){this._spiderfied._noanimationUnspiderfy()}},_unspiderfyLayer:function(e){if(e._spiderLeg){this._featureGroup.removeLayer(e);
if(e.clusterShow){e.clusterShow()};
if(e.setZIndexOffset){e.setZIndexOffset(0)};
this._map.removeLayer(e._spiderLeg);
delete e._spiderLeg}}});
L.MarkerClusterGroup.include({refreshClusters:function(e){if(!e){e=this._topClusterLevel.getAllChildMarkers()}
else if(e instanceof L.MarkerClusterGroup){e=e._topClusterLevel.getAllChildMarkers()}
else if(e instanceof L.LayerGroup){e=e._layers}
else if(e instanceof L.MarkerCluster){e=e.getAllChildMarkers()}
else if(e instanceof L.Marker){e=[e]};
this._flagParentsIconsNeedUpdate(e);
this._refreshClustersIcons();
if(this.options.singleMarkerMode){this._refreshSingleMarkerModeMarkers(e)};
return this},_flagParentsIconsNeedUpdate:function(e){var i,t;
for(i in e){t=e[i].__parent;
while(t){t._iconNeedsUpdate=!0;
t=t.__parent}}},_refreshSingleMarkerModeMarkers:function(e){var i,t;
for(i in e){t=e[i];
if(this.hasLayer(t)){t.setIcon(this._overrideMarkerIcon(t))}}}});
L.Marker.include({refreshIconOptions:function(e,t){var i=this.options.icon;
L.setOptions(i,e);
this.setIcon(i);
if(t&&this.__parent){this.__parent._group.refreshClusters(this)};
return this}});
e.MarkerClusterGroup=i;
e.MarkerCluster=t})));